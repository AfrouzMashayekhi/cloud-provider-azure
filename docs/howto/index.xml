<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud Provider Azure â€“ How-to guides</title><link>https://nilo19.github.io/cloud-provider-azure/docs/howto/</link><description>Recent content in How-to guides on Cloud Provider Azure</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://nilo19.github.io/cloud-provider-azure/docs/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: How to Use Availability Zones</title><link>https://nilo19.github.io/cloud-provider-azure/docs/howto/using-availability-zones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nilo19.github.io/cloud-provider-azure/docs/howto/using-availability-zones/</guid><description>
&lt;p>&lt;strong>Feature Status:&lt;/strong> Alpha since v1.12.&lt;/p>
&lt;p>Kubernetes v1.12 adds support for &lt;a href="https://azure.microsoft.com/en-us/global-infrastructure/availability-zones/">Azure availability zones (AZ)&lt;/a>. Nodes in availability zone will be added with label &lt;code>failure-domain.beta.kubernetes.io/zone=&amp;lt;region&amp;gt;-&amp;lt;AZ&amp;gt;&lt;/code> and topology-aware provisioning is added for Azure managed disks storage class.&lt;/p>
&lt;p>&lt;strong>TOC:&lt;/strong>&lt;/p>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#availability-zones">Availability Zones&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#pre-requirements">Pre-requirements&lt;/a>&lt;/li>
&lt;li>&lt;a href="#node-labels">Node labels&lt;/a>&lt;/li>
&lt;li>&lt;a href="#load-balancer">Load Balancer&lt;/a>&lt;/li>
&lt;li>&lt;a href="#managed-disks">Managed Disks&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#storageclass-examples">StorageClass examples&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pv-examples">PV examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#appendix">Appendix&lt;/a>&lt;/li>
&lt;li>&lt;a href="#reference">Reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="pre-requirements">Pre-requirements&lt;/h2>
&lt;p>Because only standard load balancer is supported with AZ, it is a prerequisite to enable AZ for the cluster. It should be configured in Azure cloud provider configure file (e.g. &lt;code>/etc/kubernetes/azure.json&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;loadBalancerSku&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;standard&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">.&lt;/span>&lt;span style="color:#a40000">.&lt;/span>&lt;span style="color:#a40000">.&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If topology-aware provisioning feature is used, feature gate &lt;code>VolumeScheduling&lt;/code> should be enabled on master components (e.g. kube-apiserver, kube-controller-manager and kube-scheduler).&lt;/p>
&lt;h2 id="node-labels">Node labels&lt;/h2>
&lt;p>Both zoned and unzoned nodes are supported, but the value of node label &lt;code>failure-domain.beta.kubernetes.io/zone&lt;/code> are different:&lt;/p>
&lt;ul>
&lt;li>For zoned nodes, the value is &lt;code>&amp;lt;region&amp;gt;-&amp;lt;AZ&amp;gt;&lt;/code>, e.g. &lt;code>centralus-1&lt;/code>.&lt;/li>
&lt;li>For unzoned nodes, the value is faultDomain, e.g. &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>e.g.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">$&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kubectl&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>get&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nodes&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>--show-labels&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>NAME&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>STATUS&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>AGE&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>VERSION&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>LABELS&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>kubernetes-node12&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Ready&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>6m&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#0000cf;font-weight:bold">.11&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>failure-domain.beta.kubernetes.io/region=centralus&lt;span style="color:#000;font-weight:bold">,&lt;/span>failure-domain.beta.kubernetes.io/zone=centralus&lt;span style="color:#0000cf;font-weight:bold">-1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>...&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="load-balancer">Load Balancer&lt;/h2>
&lt;p>&lt;code>loadBalancerSku&lt;/code> has been set to &lt;code>standard&lt;/code> in cloud provider configure file, so standard load balancer and standard public IPs will be provisioned automatically for services with type &lt;code>LoadBalancer&lt;/code>. Both load balancer and public IPs are zone redundant.&lt;/p>
&lt;h2 id="managed-disks">Managed Disks&lt;/h2>
&lt;p>Zone-aware and topology-aware provisioning are supported for Azure managed disks. To support these features, a few options are added in AzureDisk storage class:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>zoned&lt;/strong>: indicates whether new disks are provisioned with AZ. Default is true.&lt;/li>
&lt;li>&lt;strong>allowedTopologies&lt;/strong>: indicates which topologies are allowed for topology-aware provisioning. Only can be set if &lt;code>zoned&lt;/code> is not false.&lt;/li>
&lt;/ul>
&lt;h3 id="storageclass-examples">StorageClass examples&lt;/h3>
&lt;p>An example of zone-aware provisioning storage class is:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>storage.k8s.io/v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>kind&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>StorageClass&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>metadata&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>annotations&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>labels&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kubernetes.io/cluster-service&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>name&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>managed-premium&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>parameters&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kind&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Managed&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>storageaccounttype&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Premium_LRS&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>zoned&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>provisioner&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kubernetes.io/azure-disk&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>volumeBindingMode&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>WaitForFirstConsumer&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another example of topology-aware provisioning storage class is:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">apiVersion&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>storage.k8s.io/v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>kind&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>StorageClass&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>metadata&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>annotations&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>labels&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kubernetes.io/cluster-service&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>name&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>managed-premium&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>parameters&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kind&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Managed&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>storageaccounttype&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Premium_LRS&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>provisioner&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>kubernetes.io/azure-disk&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>volumeBindingMode&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>WaitForFirstConsumer&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>allowedTopologies&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>matchLabelExpressions&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>key&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>failure-domain.beta.kubernetes.io/zone&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>values&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>centralus&lt;span style="color:#0000cf;font-weight:bold">-1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>centralus&lt;span style="color:#0000cf;font-weight:bold">-2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pv-examples">PV examples&lt;/h3>
&lt;p>When feature gate &lt;code>VolumeScheduling&lt;/code> disabled, no &lt;code>NodeAffinity&lt;/code> set for zoned PV:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl describe pv
Name: pvc-d30dad05-9ad8-11e8-94f2-000d3a07de8c
Labels: failure-domain.beta.kubernetes.io/region&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>southeastasia
failure-domain.beta.kubernetes.io/zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>southeastasia-2
Annotations: pv.kubernetes.io/bound-by-controller&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>yes
pv.kubernetes.io/provisioned-by&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kubernetes.io/azure-disk
volumehelper.VolumeDynamicallyCreatedByKey&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>azure-disk-dynamic-provisioner
Finalizers: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>kubernetes.io/pv-protection&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
StorageClass: default
Status: Bound
Claim: default/pvc-azuredisk
Reclaim Policy: Delete
Access Modes: RWO
Capacity: 5Gi
Node Affinity:
Required Terms:
Term 0: failure-domain.beta.kubernetes.io/region in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
failure-domain.beta.kubernetes.io/zone in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia-2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Message:
Source:
Type: AzureDisk &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>an Azure Data Disk mount on the host and &lt;span style="color:#204a87">bind&lt;/span> mount to the pod&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
DiskName: k8s-5b3d7b8f-dynamic-pvc-d30dad05-9ad8-11e8-94f2-000d3a07de8c
DiskURI: /subscriptions/&amp;lt;subscription-id&amp;gt;/resourceGroups/&amp;lt;rg-name&amp;gt;/providers/Microsoft.Compute/disks/k8s-5b3d7b8f-dynamic-pvc-d30dad05-9ad8-11e8-94f2-000d3a07de8c
Kind: Managed
FSType:
CachingMode: None
ReadOnly: &lt;span style="color:#204a87">false&lt;/span>
Events: &amp;lt;none&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When feature gate &lt;code>VolumeScheduling&lt;/code> enabled, &lt;code>NodeAffinity&lt;/code> will be populated for zoned PV:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl describe pv
Name: pvc-0284337b-9ada-11e8-a7f6-000d3a07de8c
Labels: failure-domain.beta.kubernetes.io/region&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>southeastasia
failure-domain.beta.kubernetes.io/zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>southeastasia-2
Annotations: pv.kubernetes.io/bound-by-controller&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>yes
pv.kubernetes.io/provisioned-by&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kubernetes.io/azure-disk
volumehelper.VolumeDynamicallyCreatedByKey&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>azure-disk-dynamic-provisioner
Finalizers: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>kubernetes.io/pv-protection&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
StorageClass: default
Status: Bound
Claim: default/pvc-azuredisk
Reclaim Policy: Delete
Access Modes: RWO
Capacity: 5Gi
Node Affinity:
Required Terms:
Term 0: failure-domain.beta.kubernetes.io/region in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
failure-domain.beta.kubernetes.io/zone in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia-2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Message:
Source:
Type: AzureDisk &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>an Azure Data Disk mount on the host and &lt;span style="color:#204a87">bind&lt;/span> mount to the pod&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
DiskName: k8s-5b3d7b8f-dynamic-pvc-0284337b-9ada-11e8-a7f6-000d3a07de8c
DiskURI: /subscriptions/&amp;lt;subscription-id&amp;gt;/resourceGroups/&amp;lt;rg-name&amp;gt;/providers/Microsoft.Compute/disks/k8s-5b3d7b8f-dynamic-pvc-0284337b-9ada-11e8-a7f6-000d3a07de8c
Kind: Managed
FSType:
CachingMode: None
ReadOnly: &lt;span style="color:#204a87">false&lt;/span>
Events: &amp;lt;none&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>While unzoned disks are not able to attach in zoned nodes, &lt;code>NodeAffinity&lt;/code> will also be set for them so that they will only be scheduled to unzoned nodes:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl describe pv pvc-bdf93a67-9c45-11e8-ba6f-000d3a07de8c
Name: pvc-bdf93a67-9c45-11e8-ba6f-000d3a07de8c
Labels: &amp;lt;none&amp;gt;
Annotations: pv.kubernetes.io/bound-by-controller&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>yes
pv.kubernetes.io/provisioned-by&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kubernetes.io/azure-disk
volumehelper.VolumeDynamicallyCreatedByKey&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>azure-disk-dynamic-provisioner
Finalizers: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>kubernetes.io/pv-protection&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
StorageClass: azuredisk-unzoned
Status: Bound
Claim: default/unzoned-pvc
Reclaim Policy: Delete
Access Modes: RWO
Capacity: 5Gi
Node Affinity:
Required Terms:
Term 0: failure-domain.beta.kubernetes.io/region in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
failure-domain.beta.kubernetes.io/zone in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Term 1: failure-domain.beta.kubernetes.io/region in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
failure-domain.beta.kubernetes.io/zone in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Term 2: failure-domain.beta.kubernetes.io/region in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>southeastasia&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
failure-domain.beta.kubernetes.io/zone in &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
Message:
Source:
Type: AzureDisk &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>an Azure Data Disk mount on the host and &lt;span style="color:#204a87">bind&lt;/span> mount to the pod&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
DiskName: k8s-5b3d7b8f-dynamic-pvc-bdf93a67-9c45-11e8-ba6f-000d3a07de8c
DiskURI: /subscriptions/&amp;lt;subscription&amp;gt;/resourceGroups/&amp;lt;rg-name&amp;gt;/providers/Microsoft.Compute/disks/k8s-5b3d7b8f-dynamic-pvc-bdf93a67-9c45-11e8-ba6f-000d3a07de8c
Kind: Managed
FSType:
CachingMode: None
ReadOnly: &lt;span style="color:#204a87">false&lt;/span>
Events: &amp;lt;none&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="appendix">Appendix&lt;/h2>
&lt;p>Note that unlike most cases, fault domain and availability zones mean different on Azure:&lt;/p>
&lt;ul>
&lt;li>A Fault Domain (FD) is essentially a rack of servers. It consumes subsystems like network, power, cooling etc.&lt;/li>
&lt;li>Availability Zones are unique physical locations within an Azure region. Each zone is made up of one or more data centers equipped with independent power, cooling, and networking.&lt;/li>
&lt;/ul>
&lt;p>An Availability Zone in an Azure region is a combination of a fault domain and an update domain (Same like FD, but for updates. When upgrading a deployment, it is carried out one update domain at a time). For example, if you create three or more VMs across three zones in an Azure region, your VMs are effectively distributed across three fault domains and three update domains.&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>See design docs for AZ in &lt;a href="https://github.com/kubernetes/enhancements/blob/master/keps/sig-cloud-provider/azure/20180711-azure-availability-zones.md">KEP for Azure availability zones&lt;/a>.&lt;/p></description></item><item><title>Docs: How to Deploy Cross Resource Group Nodes</title><link>https://nilo19.github.io/cloud-provider-azure/docs/howto/using-cross-resource-group-nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nilo19.github.io/cloud-provider-azure/docs/howto/using-cross-resource-group-nodes/</guid><description>
&lt;p>&lt;strong>Feature status:&lt;/strong> Alpha since v1.12.&lt;/p>
&lt;p>Kubernetes v1.12 adds support for cross resource group (RG) nodes and unmanaged (such as on-prem) nodes in Azure cloud provider. A few assumptions are made for such nodes:&lt;/p>
&lt;ul>
&lt;li>Cross-RG nodes are in same region and set with required labels (as clarified in the following part)&lt;/li>
&lt;li>Nodes will not be part of the load balancer managed by cloud provider&lt;/li>
&lt;li>Both node and container networking should be configured properly by provisioning tools&lt;/li>
&lt;li>AzureDisk is supported for Azure cross-RG nodes, but not for on-prem nodes&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>TOC:&lt;/strong>&lt;/p>
&lt;!-- TOC -->
&lt;ul>
&lt;li>&lt;a href="#cross-resource-group-nodes">Cross resource group nodes&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#pre-requirements">Pre-requirements&lt;/a>&lt;/li>
&lt;li>&lt;a href="#cross-rg-nodes">Cross-RG nodes&lt;/a>&lt;/li>
&lt;li>&lt;a href="#unmanaged-nodes">Unmanaged nodes&lt;/a>&lt;/li>
&lt;li>&lt;a href="#reference">Reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- /TOC -->
&lt;h2 id="pre-requirements">Pre-requirements&lt;/h2>
&lt;p>Because cross-RG nodes and unmanaged nodes won't be added to Azure load balancer backends, feature gate &lt;code>ServiceNodeExclusion&lt;/code> should be enabled for master components (e.g. kube-controller-manager).&lt;/p>
&lt;h2 id="cross-rg-nodes">Cross-RG nodes&lt;/h2>
&lt;p>Cross-RG nodes should register themselves with required labels together with cloud provider:&lt;/p>
&lt;ul>
&lt;li>&lt;code>node.kubernetes.io/exclude-balancer&lt;/code>, which is used to exclude the node from load balancer.
&lt;ul>
&lt;li>&lt;code>alpha.service-controller.kubernetes.io/exclude-balancer=true&lt;/code> should be used if the cluster version is below v1.16.0.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>kubernetes.azure.com/resource-group=&amp;lt;rg-name&amp;gt;&lt;/code>, which provides external RG and is used to get node information.&lt;/li>
&lt;li>cloud provider config
&lt;ul>
&lt;li>&lt;code>--cloud-provider=azure&lt;/code> when using kube-controller-manager&lt;/li>
&lt;li>&lt;code>--cloud-provider=external&lt;/code> when using cloud-controller-manager&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>For example,&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubelet ... &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --cloud-provider&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>azure &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --cloud-config&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/etc/kubernetes/azure.json &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --node-labels&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>node.kubernetes.io/exclude-balancer&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>true,kubernetes.azure.com/resource-group&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;rg-name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="unmanaged-nodes">Unmanaged nodes&lt;/h2>
&lt;p>On-prem nodes are different from Azure nodes, all Azure coupled features (such as load balancers and Azure managed disks) are not supported for them. To prevent the node being deleted, Azure cloud provider will always assumes the node existing.&lt;/p>
&lt;p>On-prem nodes should register themselves with labels &lt;code>node.kubernetes.io/exclude-balancer=true&lt;/code> and &lt;code>kubernetes.azure.com/managed=false&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>node.kubernetes.io/exclude-balancer=true&lt;/code>, which is used to exclude the node from load balancer.&lt;/li>
&lt;li>&lt;code>kubernetes.azure.com/managed=false&lt;/code>, which indicates the node is on-prem or on other clouds.&lt;/li>
&lt;/ul>
&lt;p>For example,&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubelet ...&lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --cloud-provider&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --node-labels&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>node.kubernetes.io/exclude-balancer&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>true,kubernetes.azure.com/managed&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>See design docs for cross resource group nodes in &lt;a href="https://github.com/kubernetes/enhancements/blob/master/keps/sig-cloud-provider/azure/20180809-cross-resource-group-nodes.md">KEP 20180809-cross-resource-group-nodes&lt;/a>.&lt;/p></description></item></channel></rss>